<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cctrl="clr-namespace:Pharmacy.Implement.Utils.CustomControls"
    xmlns:hps="clr-namespace:HPSolutionCCDevPackage.netFramework;assembly=HPSolutionCCDevPackage.netFramework"
    xmlns:local="clr-namespace:Pharmacy">

    <!--Base Button-->
    <Style TargetType="{x:Type hps:IconButton}"
           x:Key="{x:Type  hps:IconButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Cursor"
                        Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Menu tab button-->
    <Style
        x:Key="MenuTabButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type cctrl:HPSL_Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ImageHeight" Value="{StaticResource ImageSizeRegular}" />
        <Setter Property="ImageWidth" Value="{StaticResource ImageSizeRegular}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="ImageElipseBorderWidth" Value="45" />
        <Setter Property="ImageElipseBorderHeight" Value="45" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cctrl:HPSL_Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <StackPanel DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type cctrl:HPSL_Button}}}" Orientation="Horizontal">
                            <Border Width="{Binding ImageElipseBorderWidth, FallbackValue=45}" Height="{Binding ImageElipseBorderWidth, FallbackValue=45}">
                                <Grid>
                                    <Ellipse
                                        Width="{Binding ImageElipseBorderWidth, FallbackValue=45}"
                                        Height="{Binding ImageElipseBorderHeight, FallbackValue=45}"
                                        Fill="{StaticResource NormalTheme_1st_Background_Brush}"/>
                                    <Image
                                        Width="{Binding ImageWidth, 
                                        UpdateSourceTrigger=PropertyChanged}"
                                        Height="{Binding ImageHeight, 
                                        UpdateSourceTrigger=PropertyChanged}"
                                        Source="{Binding ImageSource, 
                                        FallbackValue={StaticResource AppIcon}}" />
                                </Grid>

                            </Border>
                            <TextBlock
                                Margin="15,0,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="{StaticResource FontSizeLarge_Float}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{StaticResource Transparent}" />
                            <GradientStop Offset="1" Color="{StaticResource NormalTheme_1st_Color}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="ImageHeight" Value="{StaticResource ImageSizeRegular_Float}" />
                <Setter Property="ImageWidth" Value="{StaticResource ImageSizeRegular_Float}" />

            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- Window Control Button -->
    <Style
        x:Key="WindowControlButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <TextBlock
                            FontWeight="Thin"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
            </Trigger>

        </Style.Triggers>

    </Style>

    <!-- Window Close Button -->
    <Style
        x:Key="WindowCloseButton"
        BasedOn="{StaticResource WindowControlButton}"
        TargetType="{x:Type Button}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    
</ResourceDictionary>