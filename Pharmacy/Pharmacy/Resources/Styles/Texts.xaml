<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Pharmacy"
                    xmlns:conv="clr-namespace:Pharmacy.Implement.Utils.Converter"
                    xmlns:aprop="clr-namespace:Pharmacy.Implement.UIEventHandler.AttachedProperty"
                    xmlns:uc="clr-namespace:Pharmacy.Implement.Windows.MainScreenWindow.MVVM.Views.UserControls"
                    xmlns:cctrl="clr-namespace:Pharmacy.Implement.Utils.CustomControls">
   
    <Style TargetType="{x:Type TextBlock}"
           x:Key="SpinningText">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="Text"
                Value="&#xf110;" />
        <Setter Property="RenderTransformOrigin"
                Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform></RotateTransform>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                 From="0"
                                 To="360"
                                 Duration="0:0:2"
                                 RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard"
                                     Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="CheckingText">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Text"
                Value="Đang kiểm tra" />

        <Style.Resources>
            <Storyboard x:Name="Checking"
                        x:Key="Checking"
                        RepeatBehavior="Forever">
                <ObjectAnimationUsingKeyFrames Duration="0:0:2"
                                               Storyboard.TargetProperty="Text">
                    <ObjectAnimationUsingKeyFrames.KeyFrames>

                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                                Value="Đang kiểm tra." />
                        <DiscreteObjectKeyFrame KeyTime="0:0:1"
                                                Value="Đang kiểm tra.." />
                        <DiscreteObjectKeyFrame KeyTime="0:0:1.5"
                                                Value="Đang kiểm tra..." />
                    </ObjectAnimationUsingKeyFrames.KeyFrames>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="CheckingStoryboard"
                                     Storyboard="{StaticResource Checking}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CheckingStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type TextBox}"
           x:Key="DefaultTextBox">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderBrush"
                Value="#FF000000" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Foreground"
                Value="#FF000000" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />


                            <TextBlock IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       x:Name="placeholder"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Foreground="#AA000000">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Value="">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="BorderBrush"
                        Value="{StaticResource NormalTheme_Unable_Border_Brush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource NormalTheme_Unable_Foreground_Brush}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="{StaticResource NormalTheme_SelectedItem_Border_Brush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="{StaticResource NormalTheme_SelectedItem_Border_Brush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type TextBox}"
           x:Key="LoginTextBox"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0 5 0 5" />
        <Setter Property="BorderBrush"
                Value="#AA000000" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="#FF000000" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>

                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource FontAwesome}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="#AA000000">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Value="">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="Black" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type PasswordBox}"
           x:Key="LoginPasswordBox"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0 5 0 5" />
        <Setter Property="BorderBrush"
                Value="#AA000000" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="#FF000000" />

        <Setter Property="aprop:MonitorPasswordBoxProp.Value"
                Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <Grid>

                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource FontAwesome}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding aprop:HasTextProperty.Value, Converter={conv:BooleanToVisiblityConverter}}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="#AA000000">


                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="Black" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>